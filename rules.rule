derivative Aa+Bb => derivative[Aa]+derivative[Bb]
derivative Aa-Bb => derivative[Aa]-derivative[Bb]
derivative (Aa..) => (derivative[Aa..])
derivative A*(b^C) => (A*C)*(b^(C-1))
derivative a^BB => BB*(a^(BB-1))
derivative A*b => A
derivative b => 1
derivative A => 0
derivative Aa*Bb => ((Aa*derivative[Bb])+(Bb*derivative[Aa]))
derivative Aa/Bb => (((Bb*derivative[Aa])-(Aa*derivative[Bb]))/(Bb^2))
derivative A^b => ((A^b)*(derivative[b]*log_e(A)))
derivative log_A[Bb..] => ((1/Bb..)*((derivative[Bb..])*(1/log_e[A])))

antiderivative a => (1/2)*(a^2)
antiderivative A*(b^C) => ((1/(C+1))*(A))*(b^(C+1))

simplifyinner A => A
simplifyinner A*b => A*b
simplifyinner Aa+0 => Aa
simplifyinner 0*Aa => 0
simplifyinner Aa*0 => 0
simplifyinner A+B => evaluate{A+B}
simplifyinner A-B => evaluate{A-B}
simplifyinner A*B => evaluate{A*B}
simplifyinner AA-BB => simplifyinner[AA]-simplifyinner[BB]
simplifyinner (Aa) => Aa
simplifyinner a^0 => 1
simplifyinner a^1 => a
simplifyinner a^Bb => a^simplifyinner[Bb]
simplifyinner Aa*0 => 0
simplifyinner 1/1 => 1
simplifyinner Aa*1 => Aa
simplifyinner A*(B*c) => evaluate{A*B}*c
simplifyinner Aa+Bb => simplifyinner[Aa]+simplifyinner[Bb]
simplifyinner Aa-Bb => simplifyinner[Aa]-simplifyinner[Bb]
simplifyinner Aa*Bb => simplifyinner[Aa]*simplifyinner[Bb]
simplifyinner Aa/Bb => simplifyinner[Aa]/simplifyinner[Bb]
simplifyinner log_e[e] => 1
simplifyinner (Aa..) => (simplifyinner[Aa..])
simplifyinner Aa => Aa
simplifyinner Aa.. => Aa..

simplify (Aa..) => simplify[Aa..]
simplify Aa.. => simplifyinner[Aa..]
